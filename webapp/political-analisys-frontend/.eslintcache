[{"C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\index.js":"1","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\reportWebVitals.js":"2","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\App.js":"3","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\PoliticalPlot.js":"4","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\Model.js":"5","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\PredictOnText.js":"6","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\PredictOnTwitter.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":5970,"mtime":1610738049205,"results":"11","hashOfConfig":"9"},{"size":2595,"mtime":1610736503328,"results":"12","hashOfConfig":"9"},{"size":518,"mtime":1610741695043,"results":"13","hashOfConfig":"9"},{"size":2968,"mtime":1611586053710,"results":"14","hashOfConfig":"9"},{"size":5734,"mtime":1611586048253,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qgv46f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\index.js",[],["35","36"],"C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\reportWebVitals.js",[],"C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\App.js",["37","38"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ShortTextIcon from '@material-ui/icons/ShortText';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport PredictOnText from './PredictOnText';\r\nimport PredictOnTwitter from './PredictOnTwitter';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [component, setComponent] = useState(null)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Political attitude prediction\r\n            </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key={\"Predict on text\"} onClick={() => setComponent(<PredictOnText />)}>\r\n                        <ListItemIcon><ShortTextIcon /></ListItemIcon>\r\n                        <ListItemText primary={\"Predict on text\"} />\r\n                    </ListItem>\r\n\r\n                    <ListItem button key={\"Predict on twitter\"} onClick={() => setComponent(<PredictOnTwitter />)}>\r\n                        <ListItemIcon><TwitterIcon /></ListItemIcon>\r\n                        <ListItemText primary={\"Predict on twitter\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {component}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\PoliticalPlot.js",[],["39","40"],"C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\Model.js",[],"C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\PredictOnText.js",["41","42","43","44"],"import './App.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/ShortText';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PoliticalPlot from './PoliticalPlot';\nimport { useState } from 'react';\nimport { predict } from './Model'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#08a0e9\",\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  plot: {\n    marginTop: -50\n  },\n  title: {\n    margin: 20,\n    marginBottom: 45\n  }\n}));\n\nfunction PredictOnText() {\n  const classes = useStyles();\n  const [economic, setEconomic] = useState(0)\n  const [worldview, setWorldview] = useState(0)\n  const [text, setText] = useState(\"\")\n\n  const handleButtonClick = async () => {\n    const data = await predict(text)\n    setEconomic(data.economic)\n    setWorldview(data.worldview)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n          Analyse political attitude of specified text\n        </Typography>\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              multiline\n              rows={10}\n              required\n              fullWidth\n              id=\"text\"\n              label=\"Text to analize\"\n              name=\"text\"\n              value={text}\n              onChange={(event => setText(event.target.value))}\n\n              autoFocus\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleButtonClick}\n            >\n              Analize\n            </Button>\n          </Grid>\n          <Grid item xs={6} className={classes.plot}>\n            <PoliticalPlot economic={economic} worldview={worldview} />\n          </Grid>\n        </Grid>\n\n      </div>\n    </Container>\n  );\n}\n\nexport default PredictOnText;\n","C:\\pwr II stopien\\pwr mag semestr 2\\SMA\\project-r-polska_political_analysis\\webapp\\political-analisys-frontend\\src\\PredictOnTwitter.js",["45","46"],"import './App.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/Twitter';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport PoliticalPlot from './PoliticalPlot';\r\nimport { useState } from 'react';\r\nimport { predict_hashtag, predict_twitter_user } from './Model'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    // backgroundColor: theme.palette.primary.main,\r\n    backgroundColor: \"#08a0e9\"\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  plot: {\r\n    marginTop: -50\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: theme.spacing(10),\r\n    minWidth: 120,\r\n  },\r\n  progress: {\r\n    width: \"100%\",\r\n    // marginTop: 50\r\n  },\r\n  plot: {\r\n    marginTop: -50\r\n  },\r\n  title: {\r\n    margin: 20,\r\n    marginBottom: 45\r\n  },\r\n  datagrid: {\r\n    height: '750px',\r\n    width: '100%',\r\n    overflow: 'hidden'\r\n  },\r\n  selectedText: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: 5,\r\n    borderColor: 'black',\r\n    borderStyle: 'solid',\r\n    padding: theme.spacing(1),\r\n    margin: 10\r\n  }\r\n}));\r\n\r\nconst columns = [\r\n  { field: 'tweet', headerName: 'tweet', width: 1450, sortable: false },\r\n  { field: 'economic', headerName: 'economic', width: 150, type: 'number' },\r\n  { field: 'worldview', headerName: 'worldview', width: 150, type: 'number' },\r\n]\r\n\r\nfunction PredictOnTwitter() {\r\n  const classes = useStyles();\r\n  const [economic, setEconomic] = useState(null)\r\n  const [worldview, setWorldview] = useState(null)\r\n  const [text, setText] = useState(\"\")\r\n  const [byHashtag, setbyHashtag] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [selectedText, setSelectedText] = useState(\"\");\r\n\r\n  const handleButtonClick = async () => {\r\n    setLoading(true)\r\n    setEconomic(null)\r\n    setWorldview(null)\r\n    setTweets([])\r\n    const data = byHashtag ? await predict_hashtag(text) : await predict_twitter_user(text)\r\n\r\n    setEconomic(data.economic)\r\n    setWorldview(data.worldview)\r\n    setTweets(data.tweets)\r\n    setLoading(false)\r\n  }\r\n\r\n  const rows = tweets.map((tweet, i) => (\r\n    {\r\n      id: i,\r\n      tweet: tweet.text,\r\n      economic: tweet.economic,\r\n      worldview: tweet.worldview\r\n    }))\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Analyse political attitude of tweets\r\n        </Typography>\r\n\r\n          <Grid container>\r\n\r\n            <Grid item xs={6}>\r\n              <FormControl className={classes.formControl} fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">By</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={byHashtag}\r\n                  onChange={(event) => { setbyHashtag(event.target.value) }}\r\n                >\r\n                  <MenuItem value={true}>hashtag</MenuItem>\r\n                  <MenuItem value={false}>username</MenuItem>\r\n                </Select>\r\n\r\n              </FormControl>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                id=\"text\"\r\n                label={byHashtag ? \"hashtag\" : \"username\"}\r\n                name=\"text\"\r\n                fullWidth\r\n                value={text}\r\n                onChange={(event => setText(event.target.value))}\r\n                autoFocus\r\n              />\r\n\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                className={classes.submit}\r\n                onClick={handleButtonClick}\r\n              >\r\n                Analize\r\n        </Button>\r\n              {loading ? <LinearProgress className={classes.progress} /> : null}\r\n            </Grid>\r\n\r\n            <Grid item xs={6} className={classes.plot}>\r\n              <PoliticalPlot economic={economic} worldview={worldview} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n      <div className={classes.datagrid}>\r\n        <DataGrid columns={columns} rows={rows} pageSize={12} onCellClick={cell => setSelectedText(cell.row.tweet)} />\r\n      </div>\r\n      <div>\r\n      <Typography  variant=\"h5\" className={classes.selectedText}>\r\n        Selected text: {selectedText}\r\n      </Typography>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PredictOnTwitter;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":18,"column":8,"nodeType":"53","messageId":"54","endLine":18,"endColumn":17},{"ruleId":"51","severity":1,"message":"55","line":19,"column":8,"nodeType":"53","messageId":"54","endLine":19,"endColumn":16},{"ruleId":"47","replacedBy":"56"},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","severity":1,"message":"58","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":24},{"ruleId":"51","severity":1,"message":"59","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":16},{"ruleId":"51","severity":1,"message":"60","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":12},{"ruleId":"51","severity":1,"message":"61","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":11},{"ruleId":"51","severity":1,"message":"62","line":13,"column":8,"nodeType":"53","messageId":"54","endLine":13,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":53,"column":3,"nodeType":"65","messageId":"66","endLine":53,"endColumn":7},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'InboxIcon' is defined but never used.","Identifier","unusedVar","'MailIcon' is defined but never used.",["67"],["68"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'CircularProgress' is defined but never used.","no-dupe-keys","Duplicate key 'plot'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]